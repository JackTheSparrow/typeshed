# Stubs for _thread

from typing import Any, Callable, Dict, NoReturn, Tuple

error = RuntimeError

def _count() -> int: ...
_dangling = ...  # type: Any

class LockType:
    def acquire(self, waitflag: int = ..., timeout: int = ...) -> None: ...
    def release(self) -> None: ...
    def locked(self) -> bool: ...

def start_new_thread(function: Callable[..., Any], args: Tuple[Any, ...], kwargs: Dict[str, Any] = ...) -> int: ...
def interrupt_main() -> NoReturn: ...
def exit() -> NoReturn: ...
def allocate_lock() -> LockType: ...
def get_ident() -> int: ...
def stack_size(size: int = ...) -> int: ...

TIMEOUT_MAX: int
